---
# (c) Copyright: David HEURTEVENT, 2023
# License: GPL 3.0
# tasks file for lxc_create_containers

# LXC/LXD - Create container(s)
# Set variables
- block:
  - name: Set server:image if not specified
    pause:
      prompt: 'Enter the server:image name'
    register: image_prompt
    
  - set_fact:
      container_image: "{{ image_prompt.user_input }}"
  when: container_image is not defined

- block:
  - name: Set the base container name if not specified
    pause:
      prompt: 'Enter the base container name (will be appended if several)'
    register: name_prompt
  - set_fact: 
      container_name: "{{ name_prompt.user_input }}"
  when: container_name is not defined

- block:
  - name: Set number of containers to create if not specified
    pause:
      prompt: 'Enter the number of containers to create'
    register: count_prompt
  - set_fact: 
      container_count: "{{ count_prompt.user_input }}"
  when: container_count is not defined

# lxc launch <image_server>:<image_name> <instance_name>
# ignore_errors is true so that we can fail recreating an existing container
- name: LXC/LXD - Create the container(s)
  ansible.builtin.shell:
    "lxc launch {{ container_image }} {{ container_name }}-{{ item }} {{ container_args }}"
  with_sequence: count="{{ container_count }}"
  ignore_errors: true
  when: "container_count | int > 1" 

- name: LXC/LXD - Create one container - alt
  ansible.builtin.shell:
    "lxc launch {{ container_image }} {{ container_name }} {{ container_args }}"
  ignore_errors: true
  when: "container_count | int == 1" 

- name: LXC/LXD - List the running containers and vms
  ansible.builtin.shell:
    "lxc list --format=json status=running"
  register: msg

- name: LXC/LXD - Display the list of containers and vms
  ansible.builtin.debug:
    msg: "{{msg.stdout_lines}}"
  when: msg is defined

